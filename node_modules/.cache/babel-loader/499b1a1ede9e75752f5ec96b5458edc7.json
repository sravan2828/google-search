{"ast":null,"code":"var _jsxFileName = \"/Users/sravan/Desktop/google-search/src/containers/SearchResults/SearchResults.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport ImageList from '../../components/ImageList';\nimport ImageBox from '../../components/ImageBox';\nimport prepareImages from \"../../utils\";\n\nclass SearchResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: []\n    };\n\n    this.fetchGifs = () => {\n      const text = this.props.text;\n      const apiUrl = \"https://app.zenserp.com/api/v2/search?q=\".concat(text, \"&hl=en&gl=US&location=United%20States&search_engine=google.com&tbm=isch&num=20&apikey=2b20eb80-aad7-11e9-a80b-f5d42510bbba\");\n      fetch(apiUrl).then(res => res.json()).then(result => {\n        this.setState({\n          images: result.image_results.map(prepareImages)\n        });\n      }, error => {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchGifs();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.text !== prevProps.text) // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n      {\n        _.debounce(this.fetchGifs, 1200, {\n          leading: true\n        })();\n      }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"myModal\",\n      class: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Some text in the Modal..\"))), React.createElement(ImageList, {\n      images: this.state.images,\n      renderImage: ImageBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["/Users/sravan/Desktop/google-search/src/containers/SearchResults/SearchResults.js"],"names":["React","Component","_","ImageList","ImageBox","prepareImages","SearchResults","state","images","fetchGifs","text","props","apiUrl","fetch","then","res","json","result","setState","image_results","map","error","console","log","componentDidMount","componentDidUpdate","prevProps","debounce","leading","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,aAAP,MAA0B,aAA1B;;AACA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAErCM,KAFqC,GAE7B;AACPC,MAAAA,MAAM,EAAE;AADD,KAF6B;;AAAA,SAiBrCC,SAjBqC,GAiBzB,MAAM;AAAA,YACVC,IADU,GACF,KAAKC,KADH,CACVD,IADU;AAEjB,YAAME,MAAM,qDACgCF,IADhC,+HAAZ;AAEAG,MAAAA,KAAK,CAACD,MAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGEG,MAAD,IAAY;AACX,aAAKC,QAAL,CAAc;AACbV,UAAAA,MAAM,EAAES,MAAM,CAACE,aAAP,CAAqBC,GAArB,CAAyBf,aAAzB;AADK,SAAd;AAGA,OAPF,EAQEgB,KAAD,IAAW;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,OAVF;AAYA,KAjCoC;AAAA;;AAMrCG,EAAAA,iBAAiB,GAAG;AACnB,SAAKf,SAAL;AACA;;AAEDgB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B,QAAG,KAAKf,KAAL,CAAWD,IAAX,KAAoBgB,SAAS,CAAChB,IAAjC,EAAuC;AACvC;AACCR,QAAAA,CAAC,CAACyB,QAAF,CAAW,KAAKlB,SAAhB,EAA2B,IAA3B,EAAiC;AAACmB,UAAAA,OAAO,EAAE;AAAV,SAAjC;AACA;AACD;;AAoBDC,EAAAA,MAAM,GAAG;AACJ,WACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFD,CADD,CADD,EAOC,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWC,MAA9B;AAAsC,MAAA,WAAW,EAAEJ,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,CADE;AAWJ;;AA/CoC;;AAkDtC,eAAeE,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\nimport ImageList from '../../components/ImageList';\nimport ImageBox from '../../components/ImageBox';\nimport prepareImages from \"../../utils\";\nclass SearchResults extends Component {\n\n\tstate = {\n\t\timages: [],\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.fetchGifs();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif(this.props.text !== prevProps.text) // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n\t\t{\n\t\t\t_.debounce(this.fetchGifs, 1200, {leading: true})();\n\t\t}\n\t} \n\n\tfetchGifs = () => {\n\t\tconst {text} = this.props;\n\t\tconst apiUrl =\n\t\t\t`https://app.zenserp.com/api/v2/search?q=${text}&hl=en&gl=US&location=United%20States&search_engine=google.com&tbm=isch&num=20&apikey=2b20eb80-aad7-11e9-a80b-f5d42510bbba`\n\t\tfetch(apiUrl)\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\timages: result.image_results.map(prepareImages)\n\t\t\t\t});\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n      return (\n\t\t\t\t<div>\n\t\t\t\t\t<div id=\"myModal\" class=\"modal\">\n\t\t\t\t\t\t<div class=\"modal-content\">\n\t\t\t\t\t\t\t<span class=\"close\">&times;</span>\n\t\t\t\t\t\t\t<p>Some text in the Modal..</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ImageList images={this.state.images} renderImage={ImageBox} />\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default SearchResults;\n"]},"metadata":{},"sourceType":"module"}